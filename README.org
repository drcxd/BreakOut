#+TITLE: Break Out
#+AUTHOR: Xiaoduan Chang

This is an implementation of the classical arcade game Break Out using
Open GL with some additional features.

The project is developed under the guide provided by Joey de Vries
https://learnopengl.com/In-Practice/2D-Game/Breakout.

* Build

The project is built using [[https://xmake.io/#/][xmake]]. It is tested on Windows and Linux
platform. To build the project by yourself, you have to install xmake,
a C++ compiler (MSVC on Windows or g++ on Linux). Then clone the
repository and in the project root directory, execute the following
commands in your shell:

#+begin_src shell
  xmake   # compile the project
  xmake i # install the executable, by default install to ./bin/
#+end_src

On Windows, users could execute =./bin/BreakOut= to run the program. On
Linux, the shared libraries should be exposed to the system. This can
be done by

#+begin_src shell
  LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/path_to_project_root/bin/
  export LD_LIBRARY_PATH
#+end_src

Then the program =./bin/BreakOut= should work.

There is also a pre-compiled version you could download and run on
your computer directly
https://github.com/drcxd/BreakOut/releases/tag/v1.0.


* Features

+ Sprite-based rendering using Open GL
+ Collision detection between AABBs and between AABB and Circle
+ Particle effect highlighting the trail of the ball
+ Postprocessing effects implemented with Open GL framebuffer
+ Simple audio support and text rendering

* Future Work

+ Instead of using one texture per sprite, a texture atlas could be
  used to combine sprites into one texture which reduce the cost of
  switching between different textures
+ Instanced rendering quads or sprites to reduce draw calls
+ Using space partitioning algorithms to reduce unnecessary check for
  collision
